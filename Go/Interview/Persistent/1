1.	What is difference between Module & package in golang?
2.  Write program   below :
Input -> aabbbcccc  O/p –> a:2, b:3, c:4
Input ->Hello    O/p -> H:1, e:1,l:2,o:1
3.trace the output & please explain why 

func foo(ch chan int, n int) {
 for i := 0; i < n; i++ {
  ch <- (i * 2)
 }
}

func main() {
 ch := make(chan int, 10)
 go foo(ch, cap(ch))

 for i := range ch { 
  fmt.Print(" ", i)
 }
}

4. a := [...]int{0, 1, 2, 3} 
 x := a[:1]             //0
 y := a[2:]            //2,3 
 x = append(x, y...)  //0,2,3
 x = append(x, y…)//0,2,3,2,3
 fmt.Println(a, x)//0,1,2,3,    0,2,3,2,3
5. Backing array,
6. How go lang work in micro service  than other programming language. 
7. How rest API worked ?
8. Write interface in Golang with example, take different function to call interface function
9. What is O/p Why ? How to fixed below code:
package main 
 import ("fmt""time")
func receive(c chan int)
 {  fmt.Println("received data:", <-c) // Receive data from the channel and print it
}
func main() {  
ch := make(chan int, 10) // Create a buffered channel with a capacity of 10
go receive(ch)           // Launch a goroutine to call the 'receive' function
for i := 0; i < 10; i++ {   ch <- i // Send data (0 to 9) to the channel
l}
//close(ch)               // Close the channel (no more data will be sent)  
//time.Sleep(2 * time.Second) // Sleep for 2 seconds to ensure the goroutine can receive}


