1. Linear recursion
before & after function calling there some code to execute. A function is calling only one time.
    fun(n) {
    if (cond) {
        ----
        ----
        ----
        fun(n-1)
        ----
        ----
        ----
      }  
    }
    
2. tree recursion
before & after function calling there some code to execute. A function is calling TWO time.
  fun(n) {                          fun(n) {
  if (cond)                            if(cond) {
    ----                                ----
    ----                                ----
    ----                                fun(n-1)
    fun(n-1)                            fun(n-1)
    ----                                -----
    ----                                ---
                                     }
    ----                            }
    fun(n-1)
    ----
    ----
    }
}

3. Indirect Recursion 
A->B->C->A  Or A->B->A  here calling is cyclic like A call B, B Call A. 
4. Nested Recursion
function taking input parameter as  calling recurtion function.
 ex. fun(fun(n-1))

