 from below scenario , we required virtual destructor .

Base *bp = new Derive(); 

When object allocated on heap, we need explicitly deallocated memory using delete. If don't declare virtual destructor  then it will call only Base class NOT derive , this is memory leak. So avoid such situation we need virtual destructor in Base class.  If you define virtual function other than destructor but doesn't solve problem , it is required ONLY virtual destructor.



All STL class  doesn't have virtual destructor, So take care while inheriance a  STL class. So overcome such situation you need to used smart_ptr  in c++ 11. 

//shared_ptr<A> bp = new B();

    shared_ptr<A> bp( new B );

